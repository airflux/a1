"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","6","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.NullablePathReaderTest.FromJsValue","","io.github.airflux.reader.NullablePathReaderTest$FromJsValue","Testing 'nullable' function (an attribute is not found, returning value 'null')","Testing 'nullable' function (an attribute is not found, returning value 'null')()",""
"passed","Thu Feb 18 17:18:14 GMT 2021","Thu Feb 18 17:18:14 GMT 2021","10","","io.github.airflux.path.JsPathTest.CompanionObject","","io.github.airflux.path.JsPathTest$CompanionObject","Testing 'repath' function in companion object","Testing 'repath' function in companion object()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Eq","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Eq","Testing basic validator of the 'eq' (the number is less than a expected value)","Testing basic validator of the 'eq' (the number is less than a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.value.extension.JsValueExtensionTest.Lookup","","io.github.airflux.value.extension.JsValueExtensionTest$Lookup","testing 'lookup' function (an attribute by index is not found)","testing 'lookup' function (an attribute by index is not found)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.MaxLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MaxLength","Testing basic validator of the 'maxLength' (a value of a string is blank, and more the max allowed length)","Testing basic validator of the 'maxLength' (a value of a string is blank, and more the max allowed length)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is found)","Testing 'withDefault' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'Long' type","Testing writer for 'Long' type()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'toString' function of the JsNumber class","1.5",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is not found, returning default value)","Testing 'withDefault' function (an attribute is not found, returning default value)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","1.50",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is found)","Testing 'withDefault' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.LongReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$LongReader","Testing reader for 'Long' type","max value",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'equals contract' of the JsNumber class","Testing 'equals contract' of the JsNumber class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","2","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","0.0",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","2","","io.github.airflux.value.JsObjectTest","","io.github.airflux.value.JsObjectTest","Testing 'toString' function of the JsObject class","Testing 'toString' function of the JsObject class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Le","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Le","Testing basic validator of the 'le' (the number is equals to a expected value)","Testing basic validator of the 'le' (the number is equals to a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Lt","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Lt","Testing basic validator of the 'lt' (the number is more than a expected value)","Testing basic validator of the 'lt' (the number is more than a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","4","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ByteReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ByteReader","Testing reader for 'Byte' type","min value",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.Pattern","","io.github.airflux.reader.validator.base.StringValidatorsTest$Pattern","Testing basic validator of the 'pattern' (a value of a string is empty)","Testing basic validator of the 'pattern' (a value of a string is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ShortReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ShortReader","Testing reader for 'Short' type","max value",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","2","","io.github.airflux.value.JsBooleanTest","","io.github.airflux.value.JsBooleanTest","Testing inner state of the JsBoolean class","Testing inner state of the JsBoolean class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.value.JsArrayTest","","io.github.airflux.value.JsArrayTest","Testing 'toString' function of the JsArray class","Testing 'toString' function of the JsArray class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsNotEmpty","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsNotEmpty","Testing basic validator of the 'isNotEmpty' (a value of a string is not empty)","Testing basic validator of the 'isNotEmpty' (a value of a string is not empty)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Ne","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Ne","Testing basic validator of the 'ne' (the number is less than a expected value)","Testing basic validator of the 'ne' (the number is less than a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","6","","io.github.airflux.reader.TraversablePathReaderTest.ListReader","","io.github.airflux.reader.TraversablePathReaderTest$ListReader","Testing 'list' function (collection with inconsistent content)","Testing 'list' function (collection with inconsistent content)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.TraversablePathReaderTest.SetReader","","io.github.airflux.reader.TraversablePathReaderTest$SetReader","Testing 'set' function (collection with inconsistent content)","Testing 'set' function (collection with inconsistent content)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.result.JsResultTest.Failure","","io.github.airflux.reader.result.JsResultTest$Failure","Testing 'onFailure' function of the Failure class","Testing 'onFailure' function of the Failure class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","6","","io.github.airflux.reader.validator.base.StringValidatorsTest.MaxLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MaxLength","Testing basic validator of the 'maxLength' (a value of a string is more than the max allowed length)","Testing basic validator of the 'maxLength' (a value of a string is more than the max allowed length)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as an integer number","100",""
"passed","Thu Feb 18 17:18:14 GMT 2021","Thu Feb 18 17:18:14 GMT 2021","157","","io.github.airflux.path.JsPathTest","","io.github.airflux.path.JsPathTest","Testing 'toString' function of the JsPath class","Testing 'toString' function of the JsPath class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'and' of a validator","[4] false, false",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'toString' function of the JsNumber class","1",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNullTest","","io.github.airflux.value.JsNullTest","Testing 'toString' function of the JsNull class","Testing 'toString' function of the JsNull class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","14","","io.github.airflux.reader.TraversablePathReaderTest.ListReader","","io.github.airflux.reader.TraversablePathReaderTest$ListReader","Testing 'list' function (array is empty)","Testing 'list' function (array is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","3","","io.github.airflux.reader.result.JsResultTest.Success","","io.github.airflux.reader.result.JsResultTest$Success","Testing 'orElse' function of the Success class","Testing 'orElse' function of the Success class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","10","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Min","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Min","Testing basic validator of the 'min' (a number is more than the minimum)","Testing basic validator of the 'min' (a number is more than the minimum)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","3","","io.github.airflux.reader.validator.base.StringValidatorsTest.MaxLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MaxLength","Testing basic validator of the 'maxLength' (a value of a string is empty)","Testing basic validator of the 'maxLength' (a value of a string is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.BooleanReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$BooleanReader","Testing reader for 'Boolean' type","Testing reader for 'Boolean' type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.base.BasePrimitiveReaderTest.BigDecimalReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$BigDecimalReader","Testing reader for 'BigDecimal' type","min value",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsBooleanTest","","io.github.airflux.value.JsBooleanTest","Testing 'toString' function of the JsBoolean class","Testing 'toString' function of the JsBoolean class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsNotBlank","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsNotBlank","Testing basic validator of the 'isNotBlank' (a value of a string is empty)","Testing basic validator of the 'isNotBlank' (a value of a string is empty)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsNotEmpty","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsNotEmpty","Testing basic validator of the 'isNotEmpty' (a value of a string is empty)","Testing basic validator of the 'isNotEmpty' (a value of a string is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.base.BasePrimitiveReaderTest.BigDecimalReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$BigDecimalReader","Testing reader for 'BigDecimal' type (reading from invalid node)","Testing reader for 'BigDecimal' type (reading from invalid node)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","43","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ByteReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ByteReader","Testing reader for 'Byte' type (reading a value of an invalid format)","Testing reader for 'Byte' type (reading a value of an invalid format)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.MinLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MinLength","Testing basic validator of the 'minLength' (a value of a string is equal to the min allowed length)","Testing basic validator of the 'minLength' (a value of a string is equal to the min allowed length)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ShortReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ShortReader","Testing reader for 'Short' type (reading a value of an invalid format)","Testing reader for 'Short' type (reading a value of an invalid format)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","8","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is not found, invalid type)","Testing 'withDefault' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for Long type","Testing 'valueOf' function of the JsNumber class for Long type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.value.extension.JsValueExtensionTest.Lookup","","io.github.airflux.value.extension.JsValueExtensionTest$Lookup","testing 'lookup' function (an attribute by name is not found, node is invalid type)","testing 'lookup' function (an attribute by name is not found, node is invalid type)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as an integer number","1",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MinItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MinItems","Testing basic validator of the 'minItems' (a number of elements is less than the minimum)","Testing basic validator of the 'minItems' (a number of elements is less than the minimum)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","11","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.IsUnique","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$IsUnique","Testing basic validator of the 'isUnique' (a collection contains only unique values)","Testing basic validator of the 'isUnique' (a collection contains only unique values)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.LongReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$LongReader","Testing reader for 'Long' type","min value",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsObjectTest","","io.github.airflux.value.JsObjectTest","Testing 'equals contract' of the JsObject class","Testing 'equals contract' of the JsObject class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","6","","io.github.airflux.reader.extension.ReadAsExtensionTest.ReadAsBoolean","","io.github.airflux.reader.extension.ReadAsExtensionTest$ReadAsBoolean","Testing extension-function 'readAsBoolean' (invalid type)","Testing extension-function 'readAsBoolean' (invalid type)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsA","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsA","Testing basic validator of the 'isA' (a value of a string is a number)","Testing basic validator of the 'isA' (a value of a string is a number)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","3","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'BigDecimal' (stripTrailingZeros is true)","Testing writer for 'BigDecimal' (stripTrailingZeros is true)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.MaxLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MaxLength","Testing basic validator of the 'maxLength' (a value of a string is blank, and equal the max allowed length)","Testing basic validator of the 'maxLength' (a value of a string is blank, and equal the max allowed length)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.value.JsArrayTest","","io.github.airflux.value.JsArrayTest","Testing JsArray class without data","Testing JsArray class without data()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.NullablePathReaderTest.FromJsValue","","io.github.airflux.reader.NullablePathReaderTest$FromJsValue","Testing 'nullable' function (an attribute is found)","Testing 'nullable' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is found)","Testing 'withDefault' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","-1.5",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.NullablePathReaderTest.FromJsValue","","io.github.airflux.reader.NullablePathReaderTest$FromJsValue","Testing 'nullable' function (an attribute is not found, invalid type)","Testing 'nullable' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Max","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Max","Testing basic validator of the 'max' (the number is equal to the maximum)","Testing basic validator of the 'max' (the number is equal to the maximum)()",""
"passed","Thu Feb 18 17:18:14 GMT 2021","Thu Feb 18 17:18:14 GMT 2021","5","","io.github.airflux.path.JsPathTest","","io.github.airflux.path.JsPathTest","Testing 'equals contract' of the JsPath class","Testing 'equals contract' of the JsPath class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.result.JsResultTest.Failure.Constructors","","io.github.airflux.reader.result.JsResultTest$Failure$Constructors","Testing the constructor of the Failure class without parameters","Testing the constructor of the Failure class without parameters()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.result.JsResultTest.Failure","","io.github.airflux.reader.result.JsResultTest$Failure","Testing 'repath' function of the Failure class","Testing 'repath' function of the Failure class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is found)","Testing 'withDefault' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","3","","io.github.airflux.reader.base.BasePrimitiveReaderTest.BigDecimalReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$BigDecimalReader","Testing reader for 'BigDecimal' type","max value",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.IsUnique","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$IsUnique","Testing basic validator of the 'isUnique' (a collection is empty)","Testing basic validator of the 'isUnique' (a collection is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","3","","io.github.airflux.reader.result.JsResultTest.Failure","","io.github.airflux.reader.result.JsResultTest$Failure","Testing 'flatMap' function of the Failure class","Testing 'flatMap' function of the Failure class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.result.JsResultTest.Success","","io.github.airflux.reader.result.JsResultTest$Success","Testing 'repath' function of the Success class","Testing 'repath' function of the Success class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","23","","io.github.airflux.reader.TraversablePathReaderTest.ListReader","","io.github.airflux.reader.TraversablePathReaderTest$ListReader","Testing 'list' function","Testing 'list' function()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","-0.1",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.NullablePathReaderTest.FromJsValue","","io.github.airflux.reader.NullablePathReaderTest$FromJsValue","Testing 'nullable' function (an attribute is found with value 'null')","Testing 'nullable' function (an attribute is found with value 'null')()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.extension.ReadAsExtensionTest.ReadAsNumber","","io.github.airflux.reader.extension.ReadAsExtensionTest$ReadAsNumber","Testing extension-function 'readAsNumber' invalid type)","Testing extension-function 'readAsNumber' invalid type)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ShortReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ShortReader","Testing reader for 'Short' type (reading a value that more the allowed range)","Testing reader for 'Short' type (reading a value that more the allowed range)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","7","","io.github.airflux.path.JsPathTest.Constructors","","io.github.airflux.path.JsPathTest$Constructors","Testing the constructor of the JsPath class without parameters","Testing the constructor of the JsPath class without parameters()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.result.JsErrorTest","","io.github.airflux.reader.result.JsErrorTest","Testing 'equals contract' of the InvalidType class","Testing 'equals contract' of the InvalidType class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as an integer number","-0",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'toString' function of the JsNumber class","-1",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'Boolean' type","[2] false",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","7","","io.github.airflux.reader.JsReaderTest","","io.github.airflux.reader.JsReaderTest","Testing 'map' function of the JsReader class","Testing 'map' function of the JsReader class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","-1.50",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","148","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MinItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MinItems","Testing basic validator of the 'minItems' (a count of elements is more than the minimum)","Testing basic validator of the 'minItems' (a count of elements is more than the minimum)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","5","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Ge","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Ge","Testing basic validator of the 'ge' (the number is equals to a expected value)","Testing basic validator of the 'ge' (the number is equals to a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","3","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Ge","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Ge","Testing basic validator of the 'ge' (the number is more than a expected value)","Testing basic validator of the 'ge' (the number is more than a expected value)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteTraversableAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteTraversableAttribute","Testing of a write of a traversable attribute (attribute is empty)","Testing of a write of a traversable attribute (attribute is empty)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.MinLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MinLength","Testing basic validator of the 'minLength' (a value of a string is blank, and less the min allowed length)","Testing basic validator of the 'minLength' (a value of a string is blank, and less the min allowed length)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteOptionalTraversableAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteOptionalTraversableAttribute","Testing of a write of a optional traversable attribute","Testing of a write of a optional traversable attribute()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","38","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'or' of a validator","[1] true, true",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","9","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Max","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Max","Testing basic validator of the 'max' (the number is more than the maximum)","Testing basic validator of the 'max' (the number is more than the maximum)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.BooleanReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$BooleanReader","Testing reader for 'Boolean' type (reading from invalid node)","Testing reader for 'Boolean' type (reading from invalid node)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","3","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for Int type","Testing 'valueOf' function of the JsNumber class for Int type()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Min","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Min","Testing basic validator of the 'min' (a number is less than the minimum)","Testing basic validator of the 'min' (a number is less than the minimum)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.RequiredPathReaderTest.FromJsLookup","","io.github.airflux.reader.RequiredPathReaderTest$FromJsLookup","Testing 'required' function (an attribute is not found)","Testing 'required' function (an attribute is not found)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ByteReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ByteReader","Testing reader for 'Byte' type","max value",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteNullableAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteNullableAttribute","Testing of a write of a nullable attribute (a value of an attribute is null)","Testing of a write of a nullable attribute (a value of an attribute is null)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for Byte type","Testing 'valueOf' function of the JsNumber class for Byte type()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'Int' type","Testing writer for 'Int' type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.result.JsResultTest.Failure","","io.github.airflux.reader.result.JsResultTest$Failure","Testing 'getOrElse' function of the Failure class","Testing 'getOrElse' function of the Failure class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'toString' function of the JsNumber class","1.50",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.MaxLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MaxLength","Testing basic validator of the 'maxLength' (a value of a string is equal to the max allowed length)","Testing basic validator of the 'maxLength' (a value of a string is equal to the max allowed length)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Ne","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Ne","Testing basic validator of the 'eq' (the number is more than a expected value)","Testing basic validator of the 'eq' (the number is more than a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is not found, invalid type)","Testing 'withDefault' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.IntReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$IntReader","Testing reader for 'Int' type","max value",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","8","","io.github.airflux.path.JsPathTest.Constructors","","io.github.airflux.path.JsPathTest$Constructors","Testing the constructor of the JsPath class with number parameter","Testing the constructor of the JsPath class with number parameter()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsNotBlank","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsNotBlank","Testing basic validator of the 'isNotBlank' (a value of a string is blank)","Testing basic validator of the 'isNotBlank' (a value of a string is blank)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.Pattern","","io.github.airflux.reader.validator.base.StringValidatorsTest$Pattern","Testing basic validator of the 'pattern' (a value of a string is matching to the pattern)","Testing basic validator of the 'pattern' (a value of a string is matching to the pattern)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsObjectTest","","io.github.airflux.value.JsObjectTest","Testing JsObject class","Testing JsObject class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","+.0",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.result.JsResultTest.Failure","","io.github.airflux.reader.result.JsResultTest$Failure","Testing 'orElse' function of the Failure class","Testing 'orElse' function of the Failure class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","3","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Le","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Le","Testing basic validator of the 'le' (the number is more than a expected value)","Testing basic validator of the 'le' (the number is more than a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","3","","io.github.airflux.reader.JsReaderTest","","io.github.airflux.reader.JsReaderTest","Testing 'or' function of the JsReader class (second reader)","Testing 'or' function of the JsReader class (second reader)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.IntReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$IntReader","Testing reader for 'Int' type","min value",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","9","","io.github.airflux.value.JsObjectTest","","io.github.airflux.value.JsObjectTest","Testing JsObject class without attributes","Testing JsObject class without attributes()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'Boolean' type","[1] true",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteOptionalAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteOptionalAttribute","Testing of a write of an optional attribute (a value of an attribute is null)","Testing of a write of an optional attribute (a value of an attribute is null)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Max","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Max","Testing basic validator of the 'max' (the number is less than the maximum)","Testing basic validator of the 'max' (the number is less than the maximum)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","4","","io.github.airflux.reader.base.BasePrimitiveReaderTest.LongReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$LongReader","Testing reader for 'Long' type (reading a value of an invalid format)","Testing reader for 'Long' type (reading a value of an invalid format)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsA","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsA","Testing basic validator of the 'isA' (a value of a string is not a number but an empty string)","Testing basic validator of the 'isA' (a value of a string is not a number but an empty string)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.RequiredPathReaderTest.FromJsValue","","io.github.airflux.reader.RequiredPathReaderTest$FromJsValue","Testing 'required' function (an attribute is not found, invalid type)","Testing 'required' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","2","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for Short type","Testing 'valueOf' function of the JsNumber class for Short type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.StringReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$StringReader","Testing reader for 'String' type (reading from invalid node)","Testing reader for 'String' type (reading from invalid node)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","5","","io.github.airflux.reader.JsReaderTest","","io.github.airflux.reader.JsReaderTest","Testing 'or' function of the JsReader class (failure both reader)","Testing 'or' function of the JsReader class (failure both reader)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","2","","io.github.airflux.value.JsStringTest","","io.github.airflux.value.JsStringTest","Testing 'equals contract' of the JsString class","Testing 'equals contract' of the JsString class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.result.JsErrorTest","","io.github.airflux.reader.result.JsErrorTest","Testing 'equals contract' of the NumberFormat class","Testing 'equals contract' of the NumberFormat class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","71","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsNotBlank","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsNotBlank","Testing basic validator of the 'isNotBlank' (a value of a string is not blank)","Testing basic validator of the 'isNotBlank' (a value of a string is not blank)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ShortReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ShortReader","Testing reader for 'Short' type (reading from invalid node)","Testing reader for 'Short' type (reading from invalid node)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.result.JsResultTest.Success","","io.github.airflux.reader.result.JsResultTest$Success","Testing 'onFailure' function of the Success class","Testing 'onFailure' function of the Success class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","-.0",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type",".0",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.MinLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MinLength","Testing basic validator of the 'minLength' (a value of a string is more than the min allowed length)","Testing basic validator of the 'minLength' (a value of a string is more than the min allowed length)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'Byte' type","Testing writer for 'Byte' type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.RequiredPathReaderTest.FromJsValue","","io.github.airflux.reader.RequiredPathReaderTest$FromJsValue","Testing 'required' function (an attribute is found)","Testing 'required' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'Short' type","Testing writer for 'Short' type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.result.JsResultTest.Failure.Constructors","","io.github.airflux.reader.result.JsResultTest$Failure$Constructors","Testing the constructor of the Failure class with only error description","Testing the constructor of the Failure class with only error description()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Le","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Le","Testing basic validator of the 'le' (the number is less than a expected value)","Testing basic validator of the 'le' (the number is less than a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MaxItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MaxItems","Testing basic validator of the 'maxItems' (a collection is empty)","Testing basic validator of the 'maxItems' (a collection is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","9","","io.github.airflux.reader.result.JsResultTest.Success","","io.github.airflux.reader.result.JsResultTest$Success","Testing 'map' function of the Success class","Testing 'map' function of the Success class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","2","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","1.5",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.IntReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$IntReader","Testing reader for 'Int' type (reading from invalid node)","Testing reader for 'Int' type (reading from invalid node)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.RequiredPathReaderTest.FromJsLookup","","io.github.airflux.reader.RequiredPathReaderTest$FromJsLookup","Testing 'required' function (an attribute is not found, invalid type)","Testing 'required' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.MaxLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MaxLength","Testing basic validator of the 'maxLength' (a value of a string is less than the max allowed length)","Testing basic validator of the 'maxLength' (a value of a string is less than the max allowed length)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","3","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MaxItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MaxItems","Testing basic validator of the 'maxItems' (a count of elements is equal to the maximum)","Testing basic validator of the 'maxItems' (a count of elements is equal to the maximum)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MinItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MinItems","Testing basic validator of the 'minItems' (a count of elements is equal to the minimum)","Testing basic validator of the 'minItems' (a count of elements is equal to the minimum)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","-1.50",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as an integer number","0",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is not found, returning default value)","Testing 'withDefault' function (an attribute is not found, returning default value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.value.extension.JsValueExtensionTest.Lookup","","io.github.airflux.value.extension.JsValueExtensionTest$Lookup","testing 'lookup' function (an attribute by index is found)","testing 'lookup' function (an attribute by index is found)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","false",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","-0.0",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as an integer number","-100",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.RequiredPathReaderTest.FromJsLookup","","io.github.airflux.reader.RequiredPathReaderTest$FromJsLookup","Testing 'required' function (an attribute is found)","Testing 'required' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteNullableAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteNullableAttribute","Testing of a write of a nullable attribute","Testing of a write of a nullable attribute()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteTraversableAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteTraversableAttribute","Testing of a write of a traversable attribute","Testing of a write of a traversable attribute()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","7","","io.github.airflux.reader.result.fx.JsResultFxTest","","io.github.airflux.reader.result.fx.JsResultFxTest","Testing 'fx' extension of the JsResult for the binding success","Testing 'fx' extension of the JsResult for the binding success()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is not found, returning default value)","Testing 'withDefault' function (an attribute is not found, returning default value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.IsUnique","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$IsUnique","Testing basic validator of the 'isUnique' (a collection contains duplicates)","Testing basic validator of the 'isUnique' (a collection contains duplicates)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.extension.ReadAsExtensionTest.ReadAsString","","io.github.airflux.reader.extension.ReadAsExtensionTest$ReadAsString","Testing extension-function 'readAsString'","Testing extension-function 'readAsString'()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","17","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Lt","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Lt","Testing basic validator of the 'lt' (the number is equals to a expected value)","Testing basic validator of the 'lt' (the number is equals to a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Eq","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Eq","Testing basic validator of the 'eq' (the number is more than a expected value)","Testing basic validator of the 'eq' (the number is more than a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","3","","io.github.airflux.reader.result.fx.JsResultFxTest","","io.github.airflux.reader.result.fx.JsResultFxTest","Testing 'fx' extension of the JsResult for the binding failure","Testing 'fx' extension of the JsResult for the binding failure()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.result.JsResultTest.Failure.Constructors","","io.github.airflux.reader.result.JsResultTest$Failure$Constructors","Testing the constructor of the Failure class with path and errors description","Testing the constructor of the Failure class with path and errors description()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'and' of a validator","[2] true, false",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.StringValidatorsTest.MinLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MinLength","Testing basic validator of the 'minLength' (a value of a string is empty)","Testing basic validator of the 'minLength' (a value of a string is empty)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","0","","io.github.airflux.reader.validator.base.StringValidatorsTest.MaxLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MaxLength","Testing basic validator of the 'maxLength' (a value of a string is blank, and less the max allowed length)","Testing basic validator of the 'maxLength' (a value of a string is blank, and less the max allowed length)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'String' type","Testing writer for 'String' type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","8","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is not found, invalid type)","Testing 'withDefault' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.NullablePathReaderTest.FromJsLookup","","io.github.airflux.reader.NullablePathReaderTest$FromJsLookup","Testing 'nullable' function (an attribute is not found, invalid type)","Testing 'nullable' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Gt","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Gt","Testing basic validator of the 'gt' (the number is equals to a expected value)","Testing basic validator of the 'gt' (the number is equals to a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.StringValidatorsTest.Pattern","","io.github.airflux.reader.validator.base.StringValidatorsTest$Pattern","Testing basic validator of the 'pattern' (a value of a string is not matching to the pattern)","Testing basic validator of the 'pattern' (a value of a string is not matching to the pattern)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.value.JsArrayTest","","io.github.airflux.value.JsArrayTest","Testing JsArray class","Testing JsArray class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ByteReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ByteReader","Testing reader for 'Byte' type (reading a value that more the allowed range)","Testing reader for 'Byte' type (reading a value that more the allowed range)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","36","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Gt","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Gt","Testing basic validator of the 'gt' (the number is more than a expected value)","Testing basic validator of the 'gt' (the number is more than a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'and' of a validator","[3] false, true",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'or' of a validator","[3] false, true",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","4","","io.github.airflux.reader.base.BasePrimitiveReaderTest.LongReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$LongReader","Testing reader for 'Long' type (reading from invalid node)","Testing reader for 'Long' type (reading from invalid node)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)","Testing 'withDefault' function (an attribute is found with value 'null', returning default value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.path.JsPathTest.Constructors","","io.github.airflux.path.JsPathTest$Constructors","Testing the constructor of the JsPath class with text parameter","Testing the constructor of the JsPath class with text parameter()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","3","","io.github.airflux.reader.validator.base.StringValidatorsTest.MinLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MinLength","Testing basic validator of the 'minLength' (a value of a string is blank, and more the min allowed length)","Testing basic validator of the 'minLength' (a value of a string is blank, and more the min allowed length)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.value.extension.JsValueExtensionTest.Lookup","","io.github.airflux.value.extension.JsValueExtensionTest$Lookup","testing 'lookup' function (an attribute by name is not found)","testing 'lookup' function (an attribute by name is not found)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.RequiredPathReaderTest.FromJsValue","","io.github.airflux.reader.RequiredPathReaderTest$FromJsValue","Testing 'required' function (an attribute is not found)","Testing 'required' function (an attribute is not found)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Ne","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Ne","Testing basic validator of the 'ne' (the number is equals to a expected value)","Testing basic validator of the 'ne' (the number is equals to a expected value)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.result.JsResultTest.Success","","io.github.airflux.reader.result.JsResultTest$Success","Testing 'getOrElse' function of the Success class","Testing 'getOrElse' function of the Success class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","3","","io.github.airflux.reader.result.JsResultTest.Success","","io.github.airflux.reader.result.JsResultTest$Success","Testing 'flatMap' function of the Success class","Testing 'flatMap' function of the Success class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.extension.ReadAsExtensionTest.ReadAsNumber","","io.github.airflux.reader.extension.ReadAsExtensionTest$ReadAsNumber","Testing extension-function 'readAsNumber'","Testing extension-function 'readAsNumber'()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","-1",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'or' of a validator","[4] false, false",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteOptionalTraversableAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteOptionalTraversableAttribute","Testing of a write of a optional traversable attribute (attribute is empty)","Testing of a write of a optional traversable attribute (attribute is empty)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","7","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","0.1",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.TraversablePathReaderTest.ListReader","","io.github.airflux.reader.TraversablePathReaderTest$ListReader","Testing 'list' function (an attribute is not collection)","Testing 'list' function (an attribute is not collection)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.result.JsResultTest.Failure.Constructors","","io.github.airflux.reader.result.JsResultTest$Failure$Constructors","Testing the constructor of the Failure class with path and one error description","Testing the constructor of the Failure class with path and one error description()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.StringValidatorsTest.MinLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MinLength","Testing basic validator of the 'minLength' (a value of a string is less than the min allowed length)","Testing basic validator of the 'minLength' (a value of a string is less than the min allowed length)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MinItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MinItems","Testing basic validator of the 'minItems' (a collection is empty)","Testing basic validator of the 'minItems' (a collection is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.NullablePathReaderTest.FromJsLookup","","io.github.airflux.reader.NullablePathReaderTest$FromJsLookup","Testing 'nullable' function (an attribute is not found, returning value 'null')","Testing 'nullable' function (an attribute is not found, returning value 'null')()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.value.JsArrayTest","","io.github.airflux.value.JsArrayTest","Testing 'equals contract' of the JsString class","Testing 'equals contract' of the JsString class()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.extension.ReadAsExtensionTest.ReadAsString","","io.github.airflux.reader.extension.ReadAsExtensionTest$ReadAsString","Testing extension-function 'readAsString' (invalid type)","Testing extension-function 'readAsString' (invalid type)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.base.BasePrimitiveReaderTest.IntReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$IntReader","Testing reader for 'Int' type (reading a value that more the allowed range)","Testing reader for 'Int' type (reading a value that more the allowed range)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.MinLength","","io.github.airflux.reader.validator.base.StringValidatorsTest$MinLength","Testing basic validator of the 'minLength' (a value of a string is blank, and equal the min allowed length)","Testing basic validator of the 'minLength' (a value of a string is blank, and equal the min allowed length)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","2","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Min","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Min","Testing basic validator of the 'min' (a number is equal to the minimum)","Testing basic validator of the 'min' (a number is equal to the minimum)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","9","","io.github.airflux.reader.TraversablePathReaderTest.SetReader","","io.github.airflux.reader.TraversablePathReaderTest$SetReader","Testing 'set' function (array is empty)","Testing 'set' function (array is empty)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ShortReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ShortReader","Testing reader for 'Short' type","min value",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","1","","io.github.airflux.reader.TraversablePathReaderTest.SetReader","","io.github.airflux.reader.TraversablePathReaderTest$SetReader","Testing 'set' function (an attribute is not collection)","Testing 'set' function (an attribute is not collection)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.base.BasePrimitiveReaderTest.IntReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$IntReader","Testing reader for 'Int' type (reading a value of an invalid format)","Testing reader for 'Int' type (reading a value of an invalid format)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","1.5",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'or' of a validator","[2] true, false",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","3","","io.github.airflux.reader.NullableWithDefaultPathReaderTest.FromJsValue","","io.github.airflux.reader.NullableWithDefaultPathReaderTest$FromJsValue","Testing 'withDefault' function (an attribute is not found, invalid type)","Testing 'withDefault' function (an attribute is not found, invalid type)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as an integer number","-1",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","8","","io.github.airflux.value.extension.JsValueExtensionTest.Lookup","","io.github.airflux.value.extension.JsValueExtensionTest$Lookup","testing 'lookup' function (an attribute by name is found)","testing 'lookup' function (an attribute by name is found)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","0","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MaxItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MaxItems","Testing basic validator of the 'maxItems' (a count of elements is more than the maximum)","Testing basic validator of the 'maxItems' (a count of elements is more than the maximum)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteRequiredAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteRequiredAttribute","Testing of a write of a required attribute","Testing of a write of a required attribute()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.TraversablePathReaderTest.SetReader","","io.github.airflux.reader.TraversablePathReaderTest$SetReader","Testing 'set' function","Testing 'set' function()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","2","","io.github.airflux.writer.extension.JsWriterExtensionTest.WriteOptionalAttribute","","io.github.airflux.writer.extension.JsWriterExtensionTest$WriteOptionalAttribute","Testing of a write of an optional attribute","Testing of a write of an optional attribute()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","4","","io.github.airflux.reader.result.JsResultTest.Failure","","io.github.airflux.reader.result.JsResultTest$Failure","Testing 'map' function of the Failure class","Testing 'map' function of the Failure class()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","1.50",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","5","","io.github.airflux.reader.NullablePathReaderTest.FromJsLookup","","io.github.airflux.reader.NullablePathReaderTest$FromJsLookup","Testing 'nullable' function (an attribute is found)","Testing 'nullable' function (an attribute is found)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Gt","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Gt","Testing basic validator of the 'gt' (the number is less than a expected value)","Testing basic validator of the 'gt' (the number is less than a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsNotEmpty","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsNotEmpty","Testing basic validator of the 'isNotEmpty' (a value of a string is blank)","Testing basic validator of the 'isNotEmpty' (a value of a string is blank)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","4","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Eq","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Eq","Testing basic validator of the 'eq' (the number is equals to a expected value)","Testing basic validator of the 'eq' (the number is equals to a expected value)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'toString' function of the JsNumber class","-1.5",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'valueOf' function of the JsNumber class for String type","1",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.writer.base.BasePrimitiveWriterTest","","io.github.airflux.writer.base.BasePrimitiveWriterTest","Testing writer for 'BigDecimal' (default configuration)","Testing writer for 'BigDecimal' (default configuration)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.StringValidatorsTest.IsA","","io.github.airflux.reader.validator.base.StringValidatorsTest$IsA","Testing basic validator of the 'isA' (a value of a string is not a number)","Testing basic validator of the 'isA' (a value of a string is not a number)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","2","","io.github.airflux.reader.NullablePathReaderTest.FromJsLookup","","io.github.airflux.reader.NullablePathReaderTest$FromJsLookup","Testing 'nullable' function (an attribute is found with value 'null')","Testing 'nullable' function (an attribute is found with value 'null')()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","4","","io.github.airflux.reader.base.BasePrimitiveReaderTest.ByteReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$ByteReader","Testing reader for 'Byte' type (reading from invalid node)","Testing reader for 'Byte' type (reading from invalid node)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.WithDefaultPathReaderTest.FromJsLookup","","io.github.airflux.reader.WithDefaultPathReaderTest$FromJsLookup","Testing 'withDefault' function (an attribute is not found, returning default value)","Testing 'withDefault' function (an attribute is not found, returning default value)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing the internal representation as a real number","-1.5",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","1","","io.github.airflux.value.extension.JsValueExtensionTest.Lookup","","io.github.airflux.value.extension.JsValueExtensionTest$Lookup","testing 'lookup' function (an attribute by index is not found, node is invalid type)","testing 'lookup' function (an attribute by index is not found, node is invalid type)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","5","","io.github.airflux.reader.JsReaderTest","","io.github.airflux.reader.JsReaderTest","Testing 'or' function of the JsReader class (first reader)","Testing 'or' function of the JsReader class (first reader)()",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsStringTest","","io.github.airflux.value.JsStringTest","Testing 'toString' function of the JsString class","Testing 'toString' function of the JsString class()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Lt","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Lt","Testing basic validator of the 'lt' (the number is less than a expected value)","Testing basic validator of the 'lt' (the number is less than a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","1","","io.github.airflux.reader.validator.base.NumberValidatorsTest.Ge","","io.github.airflux.reader.validator.base.NumberValidatorsTest$Ge","Testing basic validator of the 'ge' (the number is less than a expected value)","Testing basic validator of the 'ge' (the number is less than a expected value)()",""
"passed","Thu Feb 18 17:18:15 GMT 2021","Thu Feb 18 17:18:15 GMT 2021","3","","io.github.airflux.reader.validator.base.ArrayValidatorsTest.MaxItems","","io.github.airflux.reader.validator.base.ArrayValidatorsTest$MaxItems","Testing basic validator of the 'maxItems' (a count of elements is less than the maximum)","Testing basic validator of the 'maxItems' (a count of elements is less than the maximum)()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","4","","io.github.airflux.reader.extension.ReadAsExtensionTest.ReadAsBoolean","","io.github.airflux.reader.extension.ReadAsExtensionTest$ReadAsBoolean","Testing extension-function 'readAsBoolean'","Testing extension-function 'readAsBoolean'()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","0","","io.github.airflux.reader.base.BasePrimitiveReaderTest.StringReader","","io.github.airflux.reader.base.BasePrimitiveReaderTest$StringReader","Testing reader for 'String' type","Testing reader for 'String' type()",""
"passed","Thu Feb 18 17:18:16 GMT 2021","Thu Feb 18 17:18:16 GMT 2021","5","","io.github.airflux.reader.validator.JsValidatorTest","","io.github.airflux.reader.validator.JsValidatorTest","Testing of the logical operator 'and' of a validator","[1] true, true",""
"passed","Thu Feb 18 17:18:17 GMT 2021","Thu Feb 18 17:18:17 GMT 2021","0","","io.github.airflux.value.JsNumberTest","","io.github.airflux.value.JsNumberTest","Testing 'toString' function of the JsNumber class","-1.50",""
